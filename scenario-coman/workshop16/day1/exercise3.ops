import("rtt_gazebo_embedded")
import("eigen_typekit")
import("kdl_typekit")
import("rst-rt_typekit")
import("rtt_rsbcomm")

import("rtt-gazebo-robot-sim")
import("rtt-core-extensions")

//### instantiate components


//## gazebo
loadComponent("gazebo","RTTGazeboEmbedded")
setActivity("gazebo",0,10,ORO_SCHED_OTHER)
gazebo.argv = strings("--verbose")

gazebo.add_plugin("libRTTGazeboClockPlugin.dylib")


//## robot sim
loadComponent("coman_gazebo","cogimon::robotSim")
setActivity("coman_gazebo",0,11,ORO_SCHED_OTHER)


//## JointPositionCtrl View
loadComponent("coman_left_arm_JointPositionCtrl","cogimon::RTTKinematicChainJa")
setActivity("coman_left_arm_JointPositionCtrl",0.01,12,ORO_SCHED_OTHER)


//### load simulation related parts (i.e. models)


//# actually start the gzserver
gazebo.configure()
//# start the simulation process
gazebo.start()
//# disable the dynamics
gazebo.toggleDynamicsSimulation(false)
//# load model
gazebo.spawn_model("iit-coman-robot", "model://iit-coman", 10)


//### configure components

//## configure coman sim
//# attach previously loaded model
coman_gazebo.getModel("iit-coman-robot")
//# execute the simulation bridge (coman)
coman_gazebo.configure()


coman_left_arm_JointPositionCtrl.addPortRobotside("left_arm_JointPositionCtrl", 7)
coman_left_arm_JointPositionCtrl.addPortRobotFBside("left_arm_JointFeedback", 7)
coman_left_arm_JointPositionCtrl.setChainandCtrlName("left_arm", "JointPositionCtrl")
coman_left_arm_JointPositionCtrl.configure()

loadComponent("coman_right_arm_JointPositionCtrl","cogimon::RTTKinematicChainJa")
setActivity("coman_right_arm_JointPositionCtrl",0.01,12,ORO_SCHED_OTHER)
coman_right_arm_JointPositionCtrl.addPortRobotside("right_arm_JointPositionCtrl", 7)
coman_right_arm_JointPositionCtrl.addPortRobotFBside("right_arm_JointFeedback", 7)
coman_right_arm_JointPositionCtrl.setChainandCtrlName("right_arm", "JointPositionCtrl")
coman_right_arm_JointPositionCtrl.configure()


//### connect components


//## connect coman_left_arm_JointPositionCtrl to coman_gazebo
var ConnPolicy cp;
//# command
connect("coman_left_arm_JointPositionCtrl.left_arm_JointPositionCtrl", "coman_gazebo.left_arm_JointPositionCtrl", cp)
//# feedback
connect("coman_gazebo.left_arm_JointFeedback", "coman_left_arm_JointPositionCtrl.left_arm_JointFeedback", cp)


//### retrieve joint information


coman_left_arm_JointPositionCtrl.retrieveJointMappings()


//### start components


coman_left_arm_JointPositionCtrl.start()


//### enable physics simulation again


gazebo.toggleDynamicsSimulation(true)


import("RttExamples")
loadComponent("controller", "ExampleLeftArm")
setActivity("controller",0.5,15,ORO_SCHED_OTHER)

var ConnPolicy cp2;
connect("controller.JointPositionOutputPort_left_arm", "coman_left_arm_JointPositionCtrl.command", cp2)

controller.retrieveJointMappings()
controller.configure

####### INSERT CODE HERE for EXERCISE 3 #######
